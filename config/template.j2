/**
 * @file
 * Defines default strategy parameter values for the given timeframe.
 */

// Defines indicator's parameter values for the given pair symbol and timeframe.
struct Indi_SAR_Params_{{ Timeframe }} : Indi_SAR_Params {
  Indi_SAR_Params_{{ Timeframe }}() : Indi_SAR_Params(indi_sar_defaults, PERIOD_{{ Timeframe }}) {
    applied_price = (ENUM_APPLIED_PRICE){{ SAR_Indi_SAR_Applied_Price | default(0) }};
    ma_method = {{ SAR_Indi_SAR_MA_Method | default(0) }};
    period = {{ SAR_Indi_SAR_Period | default(0) }};
    shift = {{ SAR_Shift | default(0) }};
  }
} indi_sar_{{ Timeframe | lower }};

// Defines strategy's parameter values for the given pair symbol and timeframe.
struct Stg_SAR_Params_{{ Timeframe }} : StgParams {
  // Struct constructor.
  Stg_SAR_Params_{{ Timeframe }}() : StgParams(stg_sar_defaults) {
    lot_size = {{ SAR_LotSize | default(0) }};
    signal_open_method = {{ SAR_SignalOpenMethod | default(0) }};
    signal_open_filter = {{ SAR_SignalOpenFilterMethod | default(1) }};
    signal_open_level = (float){{ SAR_SignalOpenLevel | default(0) }};
    signal_open_boost = {{ SAR_SignalOpenBoostMethod | default(0) }};
    signal_close_method = {{ SAR_SignalCloseMethod | default(0) }};
    signal_close_level = (float){{ SAR_SignalCloseLevel | default(0) }};
    price_stop_method = {{ SAR_PriceStopMethod | default(0) }};
    price_stop_level = {{ SAR_SignalCloseLevel | default(1) }};
    tick_filter_method = {{ SAR_TickFilterMethod  | default(1) }};
    max_spread = {{ SAR_MaxSpread | default(0) }};
  }
} stg_sar_{{ Timeframe | lower }};
